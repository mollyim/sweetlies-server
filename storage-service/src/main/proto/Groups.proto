/*
 * Copyright 2020 Signal Messenger, LLC
 * SPDX-License-Identifier: AGPL-3.0-only
 */

syntax = "proto3";

package signal;

option java_package = "org.signal.storageservice.storage.protos.groups";
option java_outer_classname = "GroupProtos";
option java_multiple_files = true;

message AvatarUploadAttributes {
  string key = 1;
  string credential = 2;
  string acl = 3;
  string algorithm = 4;
  string date = 5;
  string policy = 6;
  string signature = 7;
}

// Stored data

message Member {
  enum Role {
    UNKNOWN = 0;
    DEFAULT = 1;
    ADMINISTRATOR = 2;
  }

  bytes userId = 1;
  Role role = 2;
  bytes profileKey = 3;
  bytes presentation = 4;
  uint32 joinedAtVersion = 5;
}

message MemberPendingProfileKey {
  Member member = 1;
  bytes addedByUserId = 2;
  uint64 timestamp = 3;
}

message MemberPendingAdminApproval {
  bytes userId = 1;
  bytes profileKey = 2;
  bytes presentation = 3;
  uint64 timestamp = 4;
}

message AccessControl {
  enum AccessRequired {
    UNKNOWN = 0;
    ANY = 1;
    MEMBER = 2;
    ADMINISTRATOR = 3;
    UNSATISFIABLE = 4;
  }

  AccessRequired attributes = 1;
  AccessRequired members = 2;
  AccessRequired addFromInviteLink = 3;
}

message Group {
  bytes publicKey = 1;
  bytes title = 2;
  bytes description = 11;
  string avatar = 3;
  bytes disappearingMessagesTimer = 4;
  AccessControl accessControl = 5;
  uint32 version = 6;
  repeated Member members = 7;
  repeated MemberPendingProfileKey membersPendingProfileKey = 8;
  repeated MemberPendingAdminApproval membersPendingAdminApproval = 9;
  bytes inviteLinkPassword = 10;
  bool announcements_only = 12;
  // next: 13
}

message GroupJoinInfo {
  bytes publicKey = 1;
  bytes title = 2;
  bytes description = 8;
  string avatar = 3;
  uint32 memberCount = 4;
  AccessControl.AccessRequired addFromInviteLink = 5;
  uint32 version = 6;
  bool pendingAdminApproval = 7;
  bool pendingAdminApprovalFull = 9;
  // next: 10
}

// Deltas

message GroupChange {

  message Actions {

    message AddMemberAction {
      Member added = 1;
      bool joinFromInviteLink = 2;
    }

    message DeleteMemberAction {
      bytes deletedUserId = 1;
    }

    message ModifyMemberRoleAction {
      bytes userId = 1;
      Member.Role role = 2;
    }

    message ModifyMemberProfileKeyAction {
      bytes presentation = 1;
    }

    message AddMemberPendingProfileKeyAction {
      MemberPendingProfileKey added = 1;
    }

    message DeleteMemberPendingProfileKeyAction {
      bytes deletedUserId = 1;
    }

    message PromoteMemberPendingProfileKeyAction {
      bytes presentation = 1;
    }

    message AddMemberPendingAdminApprovalAction {
      MemberPendingAdminApproval added = 1;
    }

    message DeleteMemberPendingAdminApprovalAction {
      bytes deletedUserId = 1;
    }

    message PromoteMemberPendingAdminApprovalAction {
      bytes userId = 1;
      Member.Role role = 2;
    }

    message ModifyTitleAction {
      bytes title = 1;
    }

    message ModifyDescriptionAction {
      bytes description = 1;
    }

    message ModifyAvatarAction {
      string avatar = 1;
    }

    message ModifyDisappearingMessageTimerAction {
      bytes timer = 1;
    }

    message ModifyAttributesAccessControlAction {
      AccessControl.AccessRequired attributesAccess = 1;
    }

    message ModifyMembersAccessControlAction {
      AccessControl.AccessRequired membersAccess = 1;
    }

    message ModifyAddFromInviteLinkAccessControlAction {
      AccessControl.AccessRequired addFromInviteLinkAccess = 1;
    }

    message ModifyInviteLinkPasswordAction {
      bytes inviteLinkPassword = 1;
    }

    message ModifyAnnouncementsOnlyAction {
      bool announcements_only = 1;
    }

    bytes sourceUuid = 1;
    uint32 version = 2;

    repeated AddMemberAction addMembers = 3;
    repeated DeleteMemberAction deleteMembers = 4;
    repeated ModifyMemberRoleAction modifyMemberRoles = 5;
    repeated ModifyMemberProfileKeyAction modifyMemberProfileKeys = 6;
    repeated AddMemberPendingProfileKeyAction addMembersPendingProfileKey = 7;
    repeated DeleteMemberPendingProfileKeyAction deleteMembersPendingProfileKey = 8;
    repeated PromoteMemberPendingProfileKeyAction promoteMembersPendingProfileKey = 9;
    ModifyTitleAction modifyTitle = 10;
    ModifyAvatarAction modifyAvatar = 11;
    ModifyDisappearingMessageTimerAction modifyDisappearingMessageTimer = 12;
    ModifyAttributesAccessControlAction modifyAttributesAccess = 13;
    ModifyMembersAccessControlAction modifyMemberAccess = 14;
    ModifyAddFromInviteLinkAccessControlAction modifyAddFromInviteLinkAccess = 15;  // change epoch = 1
    repeated AddMemberPendingAdminApprovalAction addMembersPendingAdminApproval = 16;  // change epoch = 1
    repeated DeleteMemberPendingAdminApprovalAction deleteMembersPendingAdminApproval = 17;  // change epoch = 1
    repeated PromoteMemberPendingAdminApprovalAction promoteMembersPendingAdminApproval = 18;  // change epoch = 1
    ModifyInviteLinkPasswordAction modifyInviteLinkPassword = 19;  // change epoch = 1
    ModifyDescriptionAction modifyDescription = 20;  // change epoch = 2
    ModifyAnnouncementsOnlyAction modify_announcements_only = 21;  // change epoch = 3
  }

  bytes actions = 1;
  bytes serverSignature = 2;
  uint32 changeEpoch = 3;
}

message GroupChanges {
  message GroupChangeState {
    GroupChange groupChange = 1;
    Group groupState = 2;
  }

  repeated GroupChangeState groupChanges = 1;
}

// External credentials

message ExternalGroupCredential {
  string token = 1;
}
